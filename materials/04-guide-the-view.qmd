---
title: "Designing Data Visualizations<br> to Successfully Tell a Story"
subtitle: "<span style='font-size:2em;'>Guide the View(er)</span>"
author: "<a href='https://www.cedricscherer.com' style='color:#28a87d;font-weight:600;'>Cédric Scherer</a>&ensp;//&ensp;posit::conf&ensp;//&ensp;September 2023"
format:
  revealjs:
    theme: slides.scss
    logo: img/logo.png
    footer: '[Cédric Scherer](https://cedricscherer.com) // posit::conf(2023)'
    transition: fade
    progress: true
    multiplex: false
    preview-links: true
    scrollable: false
    hide-inactive-cursor: true
    highlight-style: printing
    chalkboard:
      theme: whiteboard
      boardmarker-width: 4
      buttons: true
    pause: true
editor: source
knitr:
  opts_chunk:
    dev: "ragg_png"
    retina: 3
    dpi: 200
execute:
  freeze: auto
  cache: true
  echo: true
  fig-width: 10.1
  fig-height: 6.3
  fig-align: center
---






##

```{r}
#| label: gapminder-example-emphasis-4
#| echo: false
#| cache: false
#| fig-width: 12
#| fig-asp: .65
library(ggplot2)
library(dplyr)
library(gapminder)

theme_set(theme_minimal(base_size = 22, base_family = "Asap SemiCondensed"))
theme_update(
  panel.grid.minor = element_blank(),
  plot.margin = margin(rep(20, 4)),
  strip.text = element_text(size = rel(1)),
  axis.title.y = element_text(margin = margin(r = 12), vjust = 1), 
  panel.spacing.x = unit(3.5, "lines"),
  panel.spacing.y = unit(1.5, "lines")
)

countries_g7 <- c("Japan", "United States", "Canada", "France", 
                  "Germany", "Italy", "United Kingdom")

gm_g7 <- 
  gapminder |> 
  filter(country %in% countries_g7) |> 
  group_by(country) |> 
  mutate(lifeExp_last = lifeExp[which(year == 2007)]) |> 
  ungroup() |> 
  mutate(
    country_lab = if_else(country == "Japan", paste0("<span style='color:black;'>Japan</span>"), country)
  )

gm_japan_dup <-
  gm_g7 |>
  filter(country == "Japan") |> 
  mutate(dup = if_else(year %in% c(1962, 1972), 2, 1)) |> 
  tidyr::uncount(dup) |> 
  group_by(year) |> 
  mutate(id = row_number()) |> 
  mutate(period = case_when(
      year >= 1972 & id == 1 ~ "first", 
      year <= 1962 & id == 1 ~ "last", 
      TRUE ~ "catchup"
    )
  )

g <- 
  ggplot(data = gm_g7, aes(x = year, y = lifeExp)) +
  coord_cartesian(expand = FALSE, clip = "off") +
  scale_x_continuous(breaks = seq(1952, 2007, by = 5)) +
  scale_y_continuous(limits = c(59, 85)) +
  labs(x = NULL, y = "Life expectancy", color = NULL) +
  theme(legend.justification = "top",
        legend.text = element_text(margin = margin(5, 0, 5, 0)))
g + 
  geom_line(aes(group = country), linewidth = 1, color = "grey75") +
  geom_line(data = filter(gm_g7, country == "Japan"), color = "red", linewidth = 1.8) +
  annotate(geom = "text", x = 1994, y = c(82.6, 75), 
           label = c("Japan", "Other G7\ncountries"), hjust = 0,
           color = c("red", "grey65"), family = "Asap SemiCondensed", 
           fontface = "bold", size = c(10, 7), lineheight = .8)
```



##

```{r}
#| label: gapminder-example-guide-1
#| echo: false
#| fig-width: 12
#| fig-asp: .65
g + 
  geom_line(aes(group = country), linewidth = 1, color = "grey75") +
  geom_line(data = filter(gm_g7, country == "Japan"), color = "red", linewidth = 1.8) +
  # ggforce::geom_mark_circle(
  #   data = filter(gm_g7, country == "Japan", year %in% c(1952, 1967, 2007)),
  #   aes(label = c("ranked last", "catching up", "ranked first"), group = year),
  #   family = "Asap SemiCondensed", lineheight = .85, label.fontsize = 15,
  #   expand = unit(0, "pt")
  # ) +
  geom_point(data = filter(gm_g7, country == "Japan", year %in% c(1952, 1967, 2007)),
             color = "red", fill = "white", shape = 21, stroke = 2, size = 6) +
  geom_text(data = filter(gm_g7, country == "Japan", year %in% c(1952, 1967, 2007)),
            aes(label = c("ranked last", "catching up", "ranked first")),
            vjust = c(2, 2, -1), hjust = c(.1, .1, .9),
            family = "Asap SemiCondensed", lineheight = .85, size = 6.5) +
  annotate(geom = "text", x = 1994, y = c(82.6, 75), 
           label = c("Japan", "Other G7\ncountries"), hjust = 0,
           color = c("red", "grey65"), family = "Asap SemiCondensed", 
           fontface = c("bold", "plain"), size = c(10, 7), lineheight = .8) +
  theme(axis.text.x = element_text(color = c("black", "grey65", "grey65", "black", rep("grey65", 7), "black")))
```



##

```{r}
#| label: gapminder-example-guide-3
#| echo: false
#| fig-width: 12
#| fig-asp: .65
g + 
  annotate(geom = "rect", xmin = 1962, xmax = 1972, ymin = 60, ymax = Inf, 
           fill = "grey80", alpha = .3) +
  geom_line(aes(group = country), linewidth = 1, color = "grey75") +
  geom_line(data = filter(gm_g7, country == "Japan"), color = "red", linewidth = 1.8) +
  annotate(geom = "text", x = c(1962, 1967, 1972), y = 82.6, 
           label = c("← ranked last", "catching up", "ranked first →"), 
           color = "grey45", family = "Asap SemiCondensed", 
           fontface = "bold", size = 7, hjust = c(1.05, .5, -.05)) +
  annotate(geom = "text", x = 1994, y = c(82.6, 75), 
           label = c("Japan", "Other G7\ncountries"), hjust = 0,
           color = c("red", "grey65"), family = "Asap SemiCondensed", 
           fontface = c("bold", "plain"), size = c(10, 7), lineheight = .8)
```



##

```{r}
#| label: gapminder-example-guide-4
#| echo: false
#| fig-width: 12
#| fig-asp: .65
g + 
  annotate(geom = "rect", xmin = 1962, xmax = 1972, ymin = 60, ymax = Inf, 
           fill = "grey80", alpha = .3) +
  geom_line(aes(group = country), linewidth = 1, color = "grey75") +
  geom_line(data = gm_japan_dup, aes(color = period), linewidth = 1.8) +
  annotate(geom = "text", x = c(1962, 1967, 1972), y = 82.6, 
           label = c("← ranked last", "catching up", "ranked first →"), 
           color = c("#9B4665", "#EFAC00", "#28A87D"), family = "Asap SemiCondensed", 
           fontface = "bold", size = 7, hjust = c(1.05, .5, -.05)) +
  annotate(geom = "text", x = 1994, y = c(82.6, 75), 
           label = c("Japan", "Other G7\ncountries"), hjust = 0,
           color = c("black", "grey65"), family = "Asap SemiCondensed", 
           fontface = c("bold", "plain"), size = c(10, 7), lineheight = .8) +
  scale_color_manual(values = c("#EFAC00", "#28A87D", "#9B4665"), guide = "none")
```



##

```{r}
#| label: gapminder-example-guide-5
#| echo: false
#| fig-width: 12
#| fig-asp: .65
gm_japan_2007 <- filter(gm_g7, year %in% c(2007), country == "Japan")

g + 
  annotate(geom = "rect", xmin = 1962, xmax = 1972, ymin = 60, ymax = Inf, 
           fill = "grey80", alpha = .3) +
  geom_line(aes(group = country), linewidth = 1, color = "grey75") +
  geom_line(data = gm_japan_dup, aes(color = period), linewidth = 1.8) +
  annotate(geom = "text", x = c(1962, 1967, 1972), y = 82.6, 
           label = c("← ranked last", "catching up", "ranked first →"), 
           color = c("#9B4665", "#EFAC00", "#28A87D"), family = "Asap SemiCondensed", 
           fontface = "bold", size = 7, hjust = c(1.05, .5, -.05)) +
  annotate(geom = "text", x = 1994, y = c(82.6, 75), 
           label = c("Japan", "Other G7\ncountries"), hjust = 0,
           color = c("black", "grey65"), family = "Asap SemiCondensed", 
           fontface = c("bold", "plain"), size = c(10, 7), lineheight = .8) +
  scale_color_manual(values = c("#EFAC00", "#28A87D", "#9B4665"), guide = "none") +
  geom_point(data = gm_japan_2007, size = 5, color = "#28A87D") +
  geom_text(data = gm_japan_2007, aes(label = paste(round(lifeExp, 1), "years")), 
            hjust = -.15, family = "Asap SemiCondensed", size = 6, color = "grey40") +
  theme(plot.margin = margin(20, 100, 20, 20))
```



##

```{r}
#| label: gapminder-example-guide-6
#| echo: false
#| fig-width: 12
#| fig-asp: .65
gm_japan_2007 <- filter(gm_g7, year %in% c(2007), country == "Japan")

g + 
  annotate(geom = "rect", xmin = 1962, xmax = 1972, ymin = 60, ymax = Inf, 
           fill = "grey80", alpha = .3) +
  geom_line(aes(group = country), linewidth = 1, color = "grey75") +
  geom_line(data = filter(gm_g7, country == "Japan"), color = "red", linewidth = 1.8) +
  annotate(geom = "text", x = c(1962, 1967, 1972), y = 82.6, 
           label = c("← ranked last", "catching up", "ranked first →"), 
           color = "grey40", family = "Asap SemiCondensed", 
           size = 7, fontface = "bold", hjust = c(1.05, .5, -.05)) +
  annotate(geom = "text", x = 1994, y = c(82.6, 75), 
           label = c("Japan", "Other G7\ncountries"), hjust = 0,
           color = c("red", "grey65"), family = "Asap SemiCondensed", 
           fontface = c("bold", "plain"), size = c(10, 7), lineheight = .8) +
  geom_point(data = gm_japan_2007, size = 5, color = "red") +
  geom_text(data = gm_japan_2007, aes(label = paste(round(lifeExp, 1), "years")), 
            hjust = -.15, family = "Asap SemiCondensed", size = 6, color = "grey40") +
  theme(plot.margin = margin(20, 100, 20, 20))
```



##

```{r}
#| label: gapminder-example-guide-7
#| echo: false
#| fig-width: 12
#| fig-asp: .65
gm_g7_2007 <- filter(gm_g7, year %in% c(2007))
gm_japan_2007 <- filter(gm_g7_2007, country == "Japan")
gm_other_2007 <- filter(gm_g7_2007, country != "Japan")

g + 
  annotate(geom = "rect", xmin = 1962, xmax = 1972, ymin = 60, ymax = Inf, 
           fill = "grey80", alpha = .3) +
  geom_line(aes(group = country), linewidth = 1, color = "grey75") +
  geom_line(data = filter(gm_g7, country == "Japan"), color = "red", linewidth = 1.8) +
  annotate(geom = "text", x = c(1962, 1967, 1972), y = 82.6, 
           label = c("← ranked last", "catching up", "ranked first →"), 
           color = "grey45", family = "Asap SemiCondensed", 
           size = 7, fontface = "bold", hjust = c(1.05, .5, -.05)) +
  annotate(geom = "text", x = 1994, y = c(82.6, 75), 
           label = c("Japan", "Other G7\ncountries"), hjust = 0,
           color = c("red", "grey65"), family = "Asap SemiCondensed", 
           fontface = c("bold", "plain"), size = c(10, 7), lineheight = .8) +
  geom_point(data = gm_japan_2007, size = 5, color = "red") +
  geom_text(data = gm_japan_2007, aes(label = paste(round(lifeExp, 1), "years")), 
            hjust = -.15, family = "Asap SemiCondensed", size = 6, color = "grey40") +
  annotate(geom = "text", x = 2007, y = range(gm_other_2007$lifeExp), 
           label = paste(round(range(gm_other_2007$lifeExp), 1), "years"), hjust = -.15,
           color ="grey65", family = "Asap SemiCondensed", size = 6) +
  annotate(geom = "linerange", x = 2007.4, 
           ymin = min(gm_other_2007$lifeExp), ymax = max(gm_other_2007$lifeExp), 
           color = "grey65", linewidth = 1.4) +
  theme(plot.margin = margin(20, 100, 20, 20))
```



## Confuse with Colors {.center}

![Source: OurWorldInData 2020 [(new version)](https://ourworldindata.org/travel-carbon-footprint)](img/owid-carbon-footprint-travel.png){.center}



## {#colors-owid-grey data-menu-title="Distract with Color: Fixes"}

```{r}
#| label: bar-example-colors-1
#| echo: false
#| cache: false
#| fig-align: center
library(ggplot2)
library(dplyr)

theme_set(theme_minimal(base_size = 22, base_family = "Asap SemiCondensed"))
theme_update(
  panel.grid.minor = element_blank(),
  panel.grid.major.y = element_blank(),
  axis.title.x.top = ggtext::element_markdown(hjust = 0, margin = margin(b = 12)),
  legend.position = c(.7, .2),
  plot.margin = margin(rep(20, 4)),
  plot.caption = element_text(color = "grey45", size = rel(.65), hjust = 0),
  plot.caption.position = "plot"
)

data <- 
  readr::read_csv(here::here("materials", "data", "carbon-footprint-travel.csv")) |> 
  filter(!stringr::str_detect(entity, "Ferry")) |> 
  mutate(entity = case_when(
    entity == "Bus" ~ "Public bus",
    entity == "Medium electric vehicle (UK electricity)" ~ "Medium car (UK electricity)",
    TRUE ~ entity
  ))

xlab <- "Carbon footprint of travel<br><span style='font-size:15pt;'>(grams of carbon dioxide equivalents per passenger kilometer)</span>"
caption <- "Source: UK Department for Business, Energy & Industrial Grenhouse gas reporting: conversion factors 2019."

ggplot(data, aes(x = emissions, y = forcats::fct_reorder(entity, emissions))) +
  geom_col(fill = "grey70", width = .7) +
  geom_vline(xintercept = 0, color = "grey40") +
  coord_cartesian(clip = "off") +
  scale_x_continuous(expand = c(0, 0), position = "top", 
                     labels = scales::label_number(suffix = "g")) +
  labs(x = xlab, y = NULL, caption = caption)
```



## {#colors-owid-highlight data-menu-title="Distract with Color: Fixes"}

```{r}
#| label: bar-example-colors-2
#| echo: false
#| fig-align: center
data |> 
  mutate(type = if_else(
    stringr::str_detect(entity, "car|Motorcycle|flight"),
    "Other transport", "Public land transport"
  )) |> 
  ggplot(aes(x = emissions, y = forcats::fct_reorder(entity, emissions))) +
  geom_col(aes(fill = type), width = .7) +
  geom_vline(xintercept = 0, color = "grey40") +
  coord_cartesian(clip = "off") +
  scale_x_continuous(expand = c(0, 0), position = "top", 
                     labels = scales::label_number(suffix = "g")) +
  scale_fill_manual(
    #values = c("#dfb468", "#8fb9bf", "#28a87d"),
    values = c("grey70", "#28a87d"), 
    name = NULL, guide = "none"
  ) +
  labs(x = xlab, y = NULL, caption = caption)
```



## {#colors-owid-categories data-menu-title="Distract with Color: Fixes"}

```{r}
#| label: bar-example-colors-3
#| echo: false
#| fig-align: center
data|> 
  mutate(type = case_when(
    stringr::str_detect(entity, "car|Motorcycle|vehicle") ~ "Private motorized transport",
    stringr::str_detect(entity, "flight") ~ "Public air transport",
    TRUE ~ "Public land transport"
  )) |>
  ggplot(aes(x = emissions, y = forcats::fct_reorder(entity, emissions))) +
  geom_col(aes(fill = type), width = .7) +
  geom_vline(xintercept = 0, color = "grey40") +
  coord_cartesian(clip = "off") +
  scale_x_continuous(expand = c(0, 0), position = "top", 
                     labels = scales::label_number(suffix = "g")) +
  scale_fill_manual(
    values = c("#f1cda2", "#8fb9bf", "#28a87d"),
    name = NULL, guide = guide_legend(reverse = TRUE)
  ) +
  labs(x = xlab, y = NULL, caption = caption)
```



## 

```{r}
#| label: gapminder-scatter-prep
#| echo: false
#| cache: false
library(ggplot2)
library(gapminder)

theme_set(theme_minimal(base_size = 18, base_family = "Asap SemiCondensed"))
theme_update(
  panel.grid.minor = element_blank(),
  plot.margin = margin(rep(20, 4)),
  strip.text = element_text(size = rel(1)),
  plot.caption.position = "plot"
)

gm_2007 <- dplyr::filter(gapminder, year == "2007")
colors <- c("#A50026", "#9C55E3", "#EFAC00", "#28A87D", "#00B3FF")

g <- 
  ggplot(gm_2007, aes(x = gdpPercap, y = lifeExp)) +
  coord_cartesian(clip = "off") +
  scale_x_log10(breaks = c(500, 1000, 2000, 4000, 8000, 16000, 32000),
                labels = scales::label_dollar(accuracy = 1), name = "GDP per capita") +
  labs(y = "Life expectancy", caption = "Source: Gapminder project")
```

```{r}
#| label: gapminder-scatter-shape
#| echo: false
g +
  geom_point(aes(shape = continent), alpha = .5, stroke = 0, size = 8, fill = "grey50") +
  scale_shape_manual(values = 21:25, name = "Region:")
```



##

```{r}
#| label: gapminder-scatter-color
#| echo: false
g +
  geom_point(aes(color = continent), alpha = .5, stroke = .5, size = 8) +
  scale_color_manual(values = colors, name = "Region:")
```



##

```{r}
#| label: gapminder-scatter-color-shape
#| echo: false
g + 
  geom_point(aes(shape = continent, fill = continent), 
             alpha = .5, stroke = 0, size = 8) +
  scale_fill_manual(values = colors, name = "Region:") +
  scale_shape_manual(values = 21:25, name = "Region:")
```



##

```{r}
#| label: gapminder-scatter-enclosure
#| echo: false
g + 
  annotate(
    geom = "rect", color = "grey60", fill = NA, linewidth = 2,
    xmin = min(gm_2007$gdpPercap), ymin = min(gm_2007$lifeExp), 
    xmax = median(gm_2007$gdpPercap), ymax = median(gm_2007$lifeExp)
  ) +
  annotate(
    geom = "text", x = min(gm_2007$gdpPercap), y = median(gm_2007$lifeExp),
    label = "Below global median values", vjust = 1.5, hjust = -.02,
    family = "Asap SemiCondensed", color ="grey45", size = 5.7, fontface = "bold"
  ) +
  geom_point(aes(shape = continent), fill = "white", stroke = 0, size = 8) +
  geom_point(aes(shape = continent, fill = continent), 
             alpha = .5, stroke = 0, size = 8) +
  scale_fill_manual(values = colors, name = "Region:") +
  scale_shape_manual(values = 21:25, name = "Region:")
```



# Exercises


## UPDATE Exercise 1

::: question
-   
:::


##  {background-image="img/exercise-what-now.png" background-position="center" background-size="75%"}
